set -aeuo pipefail
if [ -f www/.env ]
then
	:
else
	printf "\e[31menv file not found ... PLEASE CHECK README FILE BEFORE STARTING"
	exit
fi

source www/.env
#todo remove 1 from boilerplate
if [[ $APP_NAME = *"laravel1"* ]]; then
	printf "\e[31mCHANGE YOUR PROJECT NAME ON .ENV file"
	exit
fi

#GENERATE DOCKER FILE
./scripts/generate_env.sh



#PERMISSIONS

mkdir -p www/certs

cd docker
#run docker-compose containers

printf "Installing Containers"
#docker-compose -p $APP_NAME build --no-cache mysql redis elasticsearch workspace
docker-compose -p $APP_NAME up -d mysql redis elasticsearch workspace


printf "Generating self-signed SSL certificate for local development"
docker exec -ti $APP_NAME"_workspace_1" openssl req -x509 -sha256 -newkey rsa:2048 -keyout certs/local.key -out certs/local.pem -days 1024 -nodes -subj '/CN=localhost'


printf "Creating databsase"
docker exec -it $APP_NAME"_mysql_1" mysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS "$DB_DATABASE ||
( printf "\e[31mDatabase creation failed this problem mostly happens when database name already in use" && exit 1 )


printf "Installing nginx container"
#docker-compose -p $APP_NAME build --no-cache nginx
docker-compose -p $APP_NAME up -d nginx

#install composer packages
printf "Installing composer packages"

#This line changes composer default repo to China to fix composer download issues from China"
#docker exec -it $APP_NAME"_workspace_1" composer config -g repo.packagist composer https://packagist.phpcomposer.com

docker exec -it $APP_NAME"_workspace_1" composer update
printf "Installing npm packages"
docker exec -it $APP_NAME"_workspace_1" npm install
